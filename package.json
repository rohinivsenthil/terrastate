{
  "name": "terrastate",
  "publisher": "rohinivsenthil",
  "displayName": "Terrastate",
  "icon": "media/terrastate.png",
  "description": "Visual Studio Code extension to monitor the state of Terraform resources",
  "version": "1.0.1",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/rohinivsenthil/terrastate/issues"
  },
  "author": {
    "name": "Rohini Senthil",
    "email": "rohinivsenthil@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/rohinivsenthil/terrastate"
  },
  "engines": {
    "vscode": "^1.58.0"
  },
  "categories": [
    "Visualization",
    "Other"
  ],
  "activationEvents": [
    "onView:terrastate.terrastate"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "views": {
      "terrastate": [
        {
          "id": "terrastate.terrastate",
          "name": "Terrastate"
        },
        {
          "id": "terrastate.graph",
          "name": "Graph"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "terrastate",
          "title": "Terrastate",
          "icon": "media/terrastate.svg"
        }
      ]
    },
    "configuration": {
      "title": "Terrastate",
      "properties": {
        "terrastate.terraformPath": {
          "type": [
            "string",
            "array"
          ],
          "default": [
            "terraform",
            "/usr/bin/terraform",
            "/usr/local/bin/terraform"
          ],
          "markdownDescription": "Path and filename of the terraform executable, e.g. `/usr/bin/terraform` (Linux), this can also be an array of string values containing multiple paths to look up."
        }
      }
    },
    "commands": [
      {
        "command": "terrastate.graph",
        "title": "Graph"
      },
      {
        "command": "terrastate.sync",
        "title": "Sync",
        "icon": "$(settings-sync-view-icon)"
      },
      {
        "command": "terrastate.refresh",
        "title": "Refresh",
        "icon": "$(timeline-refresh)"
      },
      {
        "command": "terrastate.init",
        "title": "Initialize"
      },
      {
        "command": "terrastate.validate",
        "title": "Validate"
      },
      {
        "command": "terrastate.apply",
        "title": "Apply",
        "icon": "$(cloud-upload)"
      },
      {
        "command": "terrastate.applyAll",
        "title": "Apply All"
      },
      {
        "command": "terrastate.destroy",
        "title": "Destroy",
        "icon": "$(stop-circle)"
      },
      {
        "command": "terrastate.destroyAll",
        "title": "Destroy All"
      },
      {
        "command": "terrastate.taint",
        "title": "Taint"
      },
      {
        "command": "terrastate.untaint",
        "title": "Untaint"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "terrastate.sync",
          "when": "view == terrastate.terrastate",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "terrastate.destroy",
          "when": "viewItem == deployed-resource",
          "group": "inline"
        },
        {
          "command": "terrastate.apply",
          "when": "viewItem == dormant-resource",
          "group": "inline"
        },
        {
          "command": "terrastate.destroyAll",
          "when": "view == terrastate.terrastate && viewItem == directory"
        },
        {
          "command": "terrastate.applyAll",
          "when": "view == terrastate.terrastate && viewItem == directory"
        },
        {
          "command": "terrastate.init",
          "when": "view == terrastate.terrastate && viewItem == directory"
        },
        {
          "command": "terrastate.validate",
          "when": "view == terrastate.terrastate && viewItem == directory"
        },
        {
          "command": "terrastate.refresh",
          "when": "view == terrastate.terrastate && viewItem == directory",
          "group": "inline"
        },
        {
          "command": "terrastate.refresh",
          "when": "view == terrastate.terrastate && viewItem == directory"
        },
        {
          "command": "terrastate.apply",
          "when": "view == terrastate.terrastate && viewItem =~ /^((dormant|deployed)-resource)$/"
        },
        {
          "command": "terrastate.destroy",
          "when": "view == terrastate.terrastate && viewItem =~ /^deployed-resource$/"
        },
        {
          "command": "terrastate.taint",
          "when": "view == terrastate.terrastate && viewItem == deployed-resource"
        },
        {
          "command": "terrastate.untaint",
          "when": "view == terrastate.terrastate && viewItem == deployed-resource"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "test-compile": "tsc -p ./",
    "test-watch": "tsc -watch -p ./",
    "pretest": "yarn run test-compile && yarn run lint",
    "lint": "eslint src --ext ts",
    "lint:fix": "eslint --fix src --ext ts; prettier --write .",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.0.4",
    "@types/node": "^12.11.7",
    "@types/semver": "^7.3.8",
    "@types/vscode": "^1.58.0",
    "@typescript-eslint/eslint-plugin": "^4.14.1",
    "@typescript-eslint/parser": "^4.14.1",
    "eslint": "^7.19.0",
    "eslint-config-prettier": "^8.3.0",
    "glob": "^7.1.6",
    "mocha": "^8.2.1",
    "prettier": "2.3.2",
    "ts-loader": "^8.0.14",
    "typescript": "^4.1.3",
    "vscode-test": "^1.5.0",
    "webpack": "^5.19.0",
    "webpack-cli": "^4.4.0"
  },
  "dependencies": {
    "semver": "^7.3.5"
  }
}
